languages = [
	{
		"name": "HTML5",
		"color": "teal",
		"img": "img/html-logo.png",
		"url": "html"
	},
	{
		"name": "CSS3",
		"color": "grey",
		"img": "img/css-logo.png",
		"url": "css"
	},
	{
		"name": "Javascript",
		"color": "orange",
		"img": "img/javascript-logo.png",
		"url": "javascript"
	},
	{
		"name": "NodeJS",
		"color": "red",
		"img": "img/node-logo.png",
		"url": "nodejs"
	},
	{
		"name": "Python",
		"color": "red",
		"img": "img/python-logo.png",
		"url": "python"
	},
	{
		"name": "MongoDB",
		"color": "pink",
		"img": "img/mongo-logo.png",
		"url": "mongodb"
	},
	{
		"name": "Vim",
		"color": "purple",
		"img": "img/vim-logo.png",
		"url": "vim"
	},
	{
		"name": "Terminal",
		"color": "pink",
		"img": "img/terminal-logo.png",
		"url": "terminal"
	},
	{
		"name": "Git",
		"color": "purple",
		"img": "img/git-logo.png",
		"url": "git"
	},
	{
		"name": "Markdown",
		"color": "blue",
		"img": "img/markdown-logo.png",
		"url": "markdown"
	}
];

html = {
	"title": "HTML5",
	"icon": "fab fa-html5",
	"script": [
		{
			"name": "Viewport",
			"code": ["<<span class=\"html-tag\">meta</span> <span class=\"html-atr\">name</span>=<span class=\"html-string\">\"viewport\"</span> <span class=\"html-atr\">content</span>=<span class=\"html-string\">\"width=device-width, initial-scale=1.0\"</span>>"]
		},
		{
			"name": "Keywords",
			"code": ["<<span class=\"html-tag\">meta</span> <span class=\"html-atr\">name</span>=<span class=\"html-string\">\"keywords\"</span> <span class=\"html-atr\">content</span>=<span class=\"html-string\">\"HTML, CSS, Javascript\"</span>>"],
		},
		{
			"name": "Stylesheet",
			"code": ["<<span class=\"html-tag\">link</span> <span class=\"html-atr\">rel</span>=<span class=\"html-string\">\"stylesheet\"</span> <span class=\"html-atr\">type</span>=<span class=\"html-string\">\"text/css\"</span> <span class=\"html-atr\">href</span>=<span class=\"html-string\">\"styles.css\"</span>>"],
		},
		{
			"name": "Script",
			"code": ["<<span class=\"html-tag\">script</span> <span class=\"html-atr\">type</span>=<span class=\"html-string\">\"text/javascript\"</span> <span class=\"html-atr\">src</span>=<span class=\"html-string\">\"script.js\"</span>>&lt;/<span class=\"html-tag\">script</span>>"],
		},
		{
			"name": "Input No Autocomplete",
			"code": ["<<span class=\"html-tag\">input</span> <span class=\"html-atr\">autocomplete</span>=<span class=\"html-string\">\"off\"</span> <span class=\"html-atr\">type</span>=<span class=\"html-string\">\"search\"</span> <span class=\"html-atr\">name</span>=<span class=\"html-string\">\"language\"</span>>"],
		},
		{
			"name": "Form onsubmit",
			"code": [
				"<<span class=\"html-tag\">form</span> <span class=\"html-atr\">onsubmit</span>=<span class=\"html-string\">\"myFunction()\"</span>> <br> ",
				"&nbsp;&nbsp;<<span class=\"html-tag\">input</span> <span class=\"html-atr\">type</span>=<span class=\"html-string\">\"text\"</span> <span class=\"html-atr\">placeholder</span>=<span class=\"html-string\">\"Insert text\"</span>> <br>", 
				"&nbsp;&nbsp;<<span class=\"html-tag\">button</span>>Submit&lt;/<span class=\"html-tag\">button</span>> <br> ",
				"&lt;/<span class=\"html-tag\">form</span>>"
			]
		}
	]	
};

css = {
	"title": "CSS3",
	"icon": "fab fa-css3-alt",
	"script": [
	{
		"name": "Centering Trick",
		"code": [
			".<span class=\"css-class\">parent</span>{ <br> ",
			"&nbsp;&nbsp;<span class=\"css-atr-value\">position</span>: <span class=\"css-atr-value\">relative</span>; <br> ",
			"} <br> <br> ",
			".<span class=\"css-class\">element</span>{ <br> ",
			"&nbsp;&nbsp;<span class=\"css-atr-value\">position</span>: <span class=\"css-atr-value\">absolute</span>; <br> ",
			"&nbsp;&nbsp;<span class=\"css-atr-value\">top</span>: <span class=\"css-number\">50</span><span class=\"css-tag-symbol\">%</span>; <br> ",
			"&nbsp;&nbsp;<span class=\"css-atr-value\">left</span>: <span class=\"css-number\">50</span><span class=\"css-tag-symbol\">%</span>; <br> ",
			"&nbsp;&nbsp;<span class=\"css-atr-value\">transform</span>: <span class=\"css-atr-value\">translate</span>(<span class=\"css-number\">-50</span><span class=\"css-tag-symbol\">%</span>, <span class=\"css-number\">-50</span><span class=\"css-tag-symbol\">%</span>); <br> ",
			"}"
		]
	}
]
};

javascript = {
	"title": "Javascript",
	"icon": "fab fa-js-square",
	"script": [
		{
			"name": "ForEach",
			"code": [
				"<span class=\"js-reserved\">let</span> arr <span class=\"js-symbols\">=</span> [<span class=\"js-numbers\">1</span>, <span class=\"js-numbers\">2</span>, <span class=\"js-numbers\">3</span>]; <br> <br> ",
				"arr.<span class=\"js-reserved\">forEach</span>(<span class=\"js-reserved\">function</span>(<i><span class=\"js-params\">num</span></i>){ <br> ",
				"&nbsp&nbsp<span class=\"js-reserved\">console</span>.<span class=\"js-reserved\">log</span>(num<span class=\"js-symbols\">+</span><span class=\"js-numbers\">2</span>); <br> });"
			]
		},
		{
			"name": "Array Slice",
			"code": [
				"<span class=\"js-reserved\">let</span> arr <span class=\"js-symbols\">=</span> [<span class=\"js-numbers\">1</span>, <span class=\"js-numbers\">2</span>, <span class=\"js-numbers\">3</span>, <span class=\"js-numbers\">4</span>, <span class=\"js-numbers\">5</span>]; <br> <br> ",
				"arr.<span class=\"js-reserved\">slice</span>(<span class=\"js-numbers\">2</span>, <span class=\"js-numbers\">4</span>); <span class=\"js-comment\">// [3, 4], second arg can be omitted</span>"
			]
		},
		{
			"name": "Index Of",
			"code": [
				"<span class=\"js-reserved\">let</span> str <span class=\"js-symbols\">=</span> <span class=\"js-string\">\"Hello World\"</span>; <br> <br> ",
				"str.<span class=\"js-reserved\">indexOf</span>(<span class=\"js-string\">\"World\"</span>); <span class=\"js-comment\">// Returns 6, it is case sensitive. If not found it renturns -1</span>"
			]
		},
		{
			"name": "Add Class",
			"code": ["element.<span class=\"js-reserved\">className</span> <span class=\"js-symbols\">+=</span> <span class=\"js-string\">\"class-name1 class-name2\"</span>;"]
		},
		{
			"name": "Add Class Method",
			"code": ["element.classList.<span class=\"js-reserved\">add</span>(<span class=\"js-string\">\"class-name\"</span>);"]
		},
		{
			"name": "Set Attribute",
			"code": ["imgElement.<span class=\"js-reserved\">setAttribute</span>(<span class=\"js-string\">\"href\"</span>, <span class=\"js-string\">\"randomURL\"</span>);"]
		},
		{
			"name": "Add Event Listener",
			"code": [
				"element.<span class=\"js-reserved\">addEventListener</span>(<span class=\"js-string\">\"click\"</span>, <span class=\"js-reserved\">function</span>(){ <br> ",
				"&nbsp&nbsp<span class=\"js-comment\">// Code block</span> <br> ",
				"});"
			]
		},
		{
			"name": "Multiple AddEventListener",
			"code": [
				"<span class=\"js-symbols\">for</span>(<span class=\"js-reserved\">let</span> i<span class=\"js-symbols\">=</span><span class=\"js-numbers\">0</span>; i<span class=\"js-symbols\">&lt</span>elements.length; i<span class=\"js-symbols\">++</span>){ <br> ",
				"&nbsp&nbspelements[i].<span class=\"js-reserved\">addEventListener</span>(<span class=\"js-string\">\"click\"</span>, <span class=\"js-reserved\">function</span>(){ <br> ",
				"&nbsp&nbsp&nbsp&nbsp<span class=\"js-comment\">// Code block</span> <br> ",
				"&nbsp&nbsp}); <br>",
				"};"
			]
		},
		{
			"name": "Create Element",
			"code": ["<span class=\"js-reserved\">let</span> divElement <span class=\"js-symbols\">=</span> <span class=\"js-reserved\">document</span>.<span class=\"js-reserved\">createElement</span>(<span class=\"js-string\">\"div\"</span>);"]
		},
		{
			"name": "Create Text Node",
			"code": ["<span class=\"js-reserved\">let</span> newStringNode <span class=\"js-symbols\">=</span> <span class=\"js-reserved\">document</span>.<span class=\"js-reserved\">createTextNode</span>(<span class=\"js-string\">\"string\"</span>);"]
		},
		{
			"name": "Append Child Node",
			"code": ["parentElement.<span class=\"js-reserved\">appendChild</span>(childElement);"]
		},
		{
			"name": "Append String HTML",
			"code": ["parentElement.<span class=\"js-reserved\">insertAdjacentHTML</span>(<span class=\"js-string\">'beforeend'</span>, <span class=\"js-string\">'&lt;p>Random paragraph element&lt;/p>'</span>);"]
		}
	]
};

nodejs = {
	"title": "NodeJS",
	"icon": "fab fa-node-js",
	"script": [
		{
			"name": "Exporting Modules",
			"code": [
				"<span class=\"js-reserved\">const</span> <span class=\"js-class\">square</span> <span class=\"js-symbols\">=</span> <span class=\"js-reserved\">function</span>(<span class=\"js-params\">x</span>){ <br> ",
				"&nbsp;&nbsp;<span class=\"js-symbols\">return</span> x<span class=\"js-symbols\">**</span><span class=\"js-numbers\">2</span>; <br> ",
				"} <br> <br> ",
				"<span class=\"js-reserved\">module.exports</span> <span class=\"js-symbols\">=</span> square"
			]
		},
		{
			"name": "Importing Modules",
			"code": [
				"<span class=\"js-reserved\">const</span> square <span class=\"js-symbols\">=</span> <span class=\"js-reserved\">require</span>(<span class=\"js-string\">'./square'</span>); <br> <br> ",
				"<span class=\"js-reserved\">console</span>.<span class=\"js-reserved\">log</span>(<span class=\"js-string\">\"Square of 5: \"</span> <span class=\"js-symbols\">+</span> <span class=\"js-reserved\">square</span>(<span class=\"js-numbers\">5</span>));"
			]
		}
	]
};

python = {
	"title": "Python",
	"icon": "fab fa-python",
	"script": [
		{
			"name": "Length of a List and String",
			"code": ["<span class=\"python-reserved\">len</span>([<span class=\"python-number\">1</span>, <span class=\"python-number\">2</span>, <span class=\"python-number\">3</span>, <span class=\"python-number\">4</span>]) <span class=\"python-comment\"># Returns 4</span>"]
		},
		{
			"name": "Check Type",
			"code": [
				"<span class=\"python-reserved\">type</span>(<span class=\"python-number\">1</span>) <span class=\"python-comment\"># Returns &lt;class 'int'&gt;</span> <br> ",
				"<span class=\"python-reserved\">type</span>(<span class=\"python-string\">'Crash'</span>) <span class=\"python-comment\"># Returns &lt;class 'str'&gt;</span> <br> ",
				"<span class=\"python-reserved\">type</span>([<span class=\"python-number\">1</span>, <span class=\"python-number\">2</span>, <span class=\"python-number\">3</span>]) == <span class=\"python-reserved\">list</span> <span class=\"python-comment\"># Returns True</span>"
			]
		},
		{
			"name": "Reverse String and List",
			"code": [
				"sampleList <span class=\"python-symbol\">=</span> [<span class=\"python-number\">1</span>, <span class=\"python-number\">2</span>, <span class=\"python-number\">3</span>, <span class=\"python-number\">4</span>] <br> ",
				"sampleList[::<span class=\"python-symbol\">-</span><span class=\"python-number\">1</span>]"
			]
		},
		{
			"name": "List Comprehension",
			"code": [
				"twice <span class=\"python-symbol\">=</span> [x<span class=\"python-symbol\">*</span><span class=\"python-number\">2</span> <span class=\"python-symbol\">for</span> x <span class=\"python-symbol\">in</span> <span class=\"python-reserved\">range</span>(<span class=\"python-number\">10</span>)] <span class=\"python-comment\"># Returns [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]</span>"
			]
		},
		{
			"name": "Tuple",
			"code": ["sampleTuple <span class=\"python-symbol\">=</span> (<span class=\"python-number\">1</span>, <span class=\"python-number\">2</span>, <span class=\"python-number\">3</span>, <span class=\"python-number\">4</span>) <span class=\"python-comment\"> # Immutable </span>"]
		},
		{
			"name": "Elminate Duplicate in List",
			"code": [
				"sampleList <span class=\"python-symbol\">=</span> [<span class=\"python-number\">1</span>, <span class=\"python-number\">1</span>, <span class=\"python-number\">2</span>, <span class=\"python-number\">3</span>, <span class=\"python-number\">4</span>, <span class=\"python-number\">4</span>, <span class=\"python-number\">4</span>, <span class=\"python-number\">5</span>, <span class=\"python-number\">5</span>] <br> ",
				"noDuplicate <span class=\"python-symbol\">=</span> <span class=\"python-reserved\">set</span>(sampleList) <span class=\"python-comment\"># (1, 2, 3, 4, 5)</span>"
			]
		},
		{
			"name": "Set Add Value",
			"code": [
				"sampleSet <span class=\"python-symbol\">=</span> {<span class=\"python-number\">2</span>, <span class=\"python-number\">3</span>, <span class=\"python-number\">4</span>, <span class=\"python-number\">5</span>} <span class=\"python-comment\"># No repeated value</span> <br> <br> ",
				"sampleSet.<span class=\"python-reserved\">add</span>(<span class=\"python-number\">1</span>) <span class=\"python-comment\"># [1, 2, 3, 4, 5]</span> <br> ",
				"sampleSet.<span class=\"python-reserved\">update</span>([<span class=\"python-number\">0</span>, <span class=\"python-number\">6</span>]) <span class=\"python-comment\"># [0, 1, 2, 3, 4, 5, 6]</span>"
			]
		},
		{
			"name": "Looping through a Dictionary",
			"code": [
				"games <span class=\"python-symbol\">=</span> {<span class=\"python-string\">'Plaformer'</span>: <span class=\"python-string\">'Super Mario'</span>, <span class=\"python-string\">'RPG'</span>: <span class=\"python-string\">'Pokemon'</span>, <span class=\"python-string\">'Action-Adventure'</span>: <span class=\"python-string\">'Legend of Zelda'</span>} <br> <br> ",
				"<span class=\"python-symbol\">for</span> k, v <span class=\"python-symbol\">in</span> games.<span class=\"python-reserved\">items</span>(): <br> ",
				"&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"python-reserved\">print</span>(k <span class=\"python-symbol\">+</span> <span class=\"python-string\">': '</span> <span class=\"python-symbol\">+</span> v)"
			]
		}
	]
};

mongodb = {
	"title": "MongoDB",
	"icon": "fas fa-database",
	"script": [
		{
			"name": "Run Database",
			"code": ["sudo mongod"]
		},
		{
			"name": "Begin Using Database",
			"code": ["mongo"]
		},
		{
			"name": "Show All Databases",
			"code": ["show dbs"]
		},
		{
			"name": "Select Database",
			"code": ["use 'databaseName'"]
		},
		{
			"name": "Show Database Collection",
			"code": ["show collections"]
		},
		{
			"name": "Insert Document to Collection",
			"code": ["db.collection.insert({name: \"GTX 1080\", type: \"GPU\", price: \"$599.99\"})"]
		},
		{
			"name": "Show All Documents in Collection",
			"code": ["db.collection.find()"]
		},
		{
			"name": "Show Single Document in Collection",
			"code": ["db.collection.find({name: \"GTX 1080\"})"]
		},
		{
			"name": "Modify Document",
			"code": ["db.collection.update({name: \"GTX 1080\"}, {$set: {price: \"$1499.99\"}})"]
		},
		{
			"name": "Delete Document",
			"code": ["db.collection.remove({name: \"GTX 1080\"})"]
		},
		{
			"name": "Delete Collection",
			"code": ["db.collection.drop()"]
		},
		{
			"name": "Delete Database",
			"code": [
				"use databaseName </br> ",
				"db.dropDatabase()"
			]
		}
	]
};

vim = {
	"title": "Vim",
	"icon": "far fa-edit",
	"script": [
		{
			"name": "Open File with Vim",
			"code": ["<span class=\"vim-command\">vim</span> filename"]
		},
		{
			"name": "Open .vimrc",
			"code": ["<span class=\"vim-command\">vim</span> ~/.vimrc"]
		},
		{
			"name": "Set Number",
			"code": [":<span class=\"vim-command\">set</span> <span class=\"vim-value\">num</span>"]
		},
		{
			"name": "New Tab",
			"code": [":<span class=\"vim-command\">tabnew</span> filename"]
		},
		{
			"name": "Go to Next Tab",
			"code": ["<span class=\"vim-key\">gt</span>"]
		},
		{
			"name": "Go to Previous Tab",
			"code": ["<span class=\"vim-key\">gT</span>"]
		},
		{
			"name": "Close Tab",
			"code": [":<span class=\"vim-command\">tabc</span>"]
		},
		{
			"name": "Close All Tab Except Current",
			"code": [":<span class=\"vim-command\">tabo</span>"]
		},
		{
			"name": "Copy",
			"code": ["<span class=\"vim-key\">y</span>"]
		},
		{
			"name": "Cut",
			"code": ["<span class=\"vim-key\">d</span>"]
		},
		{
			"name": "Paste After Cursor",
			"code": ["<span class=\"vim-key\">p</span>"]
		},
		{
			"name": "Go to First Line",
			"code": ["<span class=\"vim-key\">gg</span>"]
		},
		{
			"name": "Go to Next Word",
			"code": ["<span class=\"vim-key\">w</span>"]
		},
		{
			"name": "Go to Next Word After Space",
			"code": ["<span class=\"vim-key\">W</span>"]
		},
		{
			"name": "Go to Previous Word",
			"code": ["<span class=\"vim-key\">b</span>"]
		},
		{
			"name": "Go to Previous Word After Space",
			"code": ["<span class=\"vim-key\">B</span>"]
		},
		{
			"name": "Delete Word",
			"code": ["<span class=\"vim-key\">dw</span>"]
		},
		{
			"name": "Delete Current Line",
			"code": ["<span class=\"vim-key\">dd</span> <span class=\"vim-symbol\">OR</span> <span class=\"vim-key\">D</span>"]
		},
		{
			"name": "Delete All",
			"code": ["<span class=\"vim-key\">dG</span>"]
		},
		{
			"name": "Undo",
			"code": ["<span class=\"vim-key\">u</span>"]
		},
		{
			"name": "Change Pane",
			"code": [
				"<span class=\"vim-key\">CTRL</span> <span class=\"vim-symbol\">+</span> <span class=\"vim-key\">w</span> <span class=\"vim-symbol\">+</span> <span class=\"vim-key\">h</span> <span class=\"vim-symbol\">OR</span> <span class=\"vim-key\">LEFT</span> <br> ",
				"<span class=\"vim-key\">CTRL</span> <span class=\"vim-symbol\">+</span> <span class=\"vim-key\">w</span> <span class=\"vim-symbol\">+</span> <span class=\"vim-key\">j</span> <span class=\"vim-symbol\">OR</span> <span class=\"vim-key\">DOWN</span> <br> ",
				"<span class=\"vim-key\">CTRL</span> <span class=\"vim-symbol\">+</span> <span class=\"vim-key\">w</span> <span class=\"vim-symbol\">+</span> <span class=\"vim-key\">k</span> <span class=\"vim-symbol\">OR</span> <span class=\"vim-key\">UP</span> <br> ",
				"<span class=\"vim-key\">CTRL</span> <span class=\"vim-symbol\">+</span> <span class=\"vim-key\">w</span> <span class=\"vim-symbol\">+</span> <span class=\"vim-key\">l</span> <span class=\"vim-symbol\">OR</span> <span class=\"vim-key\">RIGHT</span>"
			]
		}
	]
};

terminal = {
	"title": "Terminal",
	"icon": "fas fa-terminal",
	"script": [
		{
			"name": "Quit Terminal",
			"code": ["&lt;command&gt; + &lt;q&gt;"]
		},
		{
			"name": "Move to Folder",
			"code": ["cd 'dirPath'"]
		},
		{
			"name": "File list",
			"code": [
				"ls OR ls 'dirPath'"
			]
		},
		{
			"name": "Open File",
			"code": ["open -a 'App name' 'filename'"]
		},
		{
			"name": "Create File",
			"code": ["touch 'filename.extension'"]
		},
		{
			"name": "Create Folder",
			"code": ["mkdir 'foldername'"]
		},
		{
			"name": "Move File",
			"code": ["mv 'filename' 'dirPath'"]
		},
		{
			"name": "Delete File",
			"code": ["rm 'filename'"]
		},
		{
			"name": "Delete Empty Folder",
			"code": ["rmdir 'foldername'"]
		},
		{
			"name": "Delete Non Empty Folder",
			"code": ["sudo rm -r 'foldername'"]
		},
		{
			"name": "Search File",
			"code": ["find ~/ -type f -name 'filename'"]
		}
	]
};

git = {
	"title": "Git",
	"icon": "fab fa-git-square",
	"script": [
		{
			"name": "Show Log",
			"code": ["git log"]
		},
		{
			"name": "Show One Line Log",
			"code": ["git log --oneline"]
		},
		{
			"name": "Reset to Preview Commit",
			"code": ["git reset --hard 'commitID'"]
		},
		{
			"name": "Delete Untrack Files",
			"code": ["git clean -fd"]
		}
	]
};

markdown = {
	"title": "Markdown",
	"icon": "far fa-file-alt",
	"script": [
		{
			"name": "Title",
			"code": ["<span class=\"md-title-url-line\">#</span>This is a Title"]
		},
		{
			"name": "Subtitle",
			"code": ["<span class=\"md-subtitle\">##</span>This is a Subtitle"]
		},
		{
			"name": "Link",
			"code": ["<<span class=\"md-ref-url\">www.insertWeb.com</span>>"]
		},
		{

			"name": "Reference Link",
			"code": ["<span class=\"md-symbol\">[</span>Google<span class=\"md-symbol\">]</span><span class=\"md-symbol\">(</span><span class=\"md-ref-url\">https://www.google.com</span><span class=\"md-symbol\">)</span>"]
		},
		{
			"name": "Image Reference Link",
			"code": ["<span class=\"md-symbol\">![</span>ImgID<span class=\"md-symbol\">]</span><span class=\"md-symbol\">(</span><span class=\"md-ref-url\">imageURL</span><span class=\"md-symbol\">)</span>"]
		},
		{
			"name": "Quote",
			"code": ["<span class=\"md-symbol\">></span>Random block quote"]
		},
		{
			"name": "Ordered List",
			"code": [
				"<span class=\"md-subtitle\">##</span>Ordered List <br> ",
				"<span class=\"md-number\">1</span><span class=\"md-symbol\">.</span> Item <br> ",
				"<span class=\"md-number\">2</span><span class=\"md-symbol\">.</span> Item <br> ",
				"<span class=\"md-number\">3</span><span class=\"md-symbol\">.</span> Item"
			]
		},
		{
			"name": "Unordered List",
			"code": [
				"<span class=\"md-subtitle\">##</span>Unordered List <br> ",
				"<span class=\"md-symbol\">*</span>Item <br> ",
				"<span class=\"md-symbol\">*</span>Item <br> ",
				"<span class=\"md-symbol\">-</span>Item <br> ",
				"<span class=\"md-symbol\">-</span>Item"
			]
		},
		{
			"name": "Separation Line",
			"code": [
				"SEPARATION LINE <br> ",
				"<span class=\"md-title-url-line\">===============</span>"
			]
		},
		{
			"name": "Italic",
			"code": ["<span class=\"md-symbol\">*</span>italic<span class=\"md-symbol\">*</span>"]
		},
		{
			"name": "Bold",
			"code": ["<span class=\"md-symbol\">**</span>Bold<span class=\"md-symbol\">**</span>"]
		},
		{
			"name": "Monospace",
			"code": ["<span class=\"md-monospace\"><span class=\"md-symbol\">`</span>monospace<span class=\"md-symbol\">`</span></span>"]
		},
		{
			"name": "Strikethrough",
			"code": "--Strikethrough--"
		}
	]
};
